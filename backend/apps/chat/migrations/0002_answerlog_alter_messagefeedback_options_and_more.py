# Generated by Django 5.2.6 on 2025-10-01 10:24

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("chat", "0001_initial"),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AnswerLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("query", models.TextField(help_text="User's original question")),
                ("language", models.CharField(default="en", max_length=10)),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("baseline", "Baseline Strategy"),
                            ("hybrid", "Hybrid Strategy"),
                            ("rerank", "Rerank Strategy"),
                            ("fallback", "Fallback Response"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "strategy_config",
                    models.JSONField(
                        default=dict, help_text="Strategy configuration used"
                    ),
                ),
                ("chunks_retrieved", models.IntegerField(default=0)),
                ("chunks_used", models.IntegerField(default=0)),
                ("top_similarity_score", models.FloatField(blank=True, null=True)),
                ("context_used", models.BooleanField(default=True)),
                ("llm_model", models.CharField(max_length=100)),
                ("embedding_model", models.CharField(max_length=100)),
                ("prompt_tokens", models.IntegerField(default=0)),
                ("completion_tokens", models.IntegerField(default=0)),
                ("total_tokens", models.IntegerField(default=0)),
                ("retrieval_latency_ms", models.FloatField(blank=True, null=True)),
                ("generation_latency_ms", models.FloatField(blank=True, null=True)),
                ("total_latency_ms", models.FloatField(help_text="End-to-end latency")),
                (
                    "estimated_cost_usd",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Estimated API cost in USD",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("citations_count", models.IntegerField(default=0)),
                ("sources_count", models.IntegerField(default=0)),
                ("had_error", models.BooleanField(default=False)),
                ("error_type", models.CharField(blank=True, max_length=100)),
                ("error_message", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AlterModelOptions(
            name="messagefeedback",
            options={"ordering": ["-created_at"]},
        ),
        migrations.AlterUniqueTogether(
            name="messagefeedback",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="messagefeedback",
            name="expected_answer",
            field=models.TextField(blank=True, help_text="What user expected"),
        ),
        migrations.AddField(
            model_name="messagefeedback",
            name="rating",
            field=models.IntegerField(
                blank=True, help_text="1-5 star rating (optional)", null=True
            ),
        ),
        migrations.AddField(
            model_name="messagefeedback",
            name="session_id",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name="messagefeedback",
            name="user_agent",
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name="messagefeedback",
            name="user_query",
            field=models.TextField(blank=True, help_text="What user was asking"),
        ),
        migrations.AlterField(
            model_name="messagefeedback",
            name="feedback_type",
            field=models.CharField(
                choices=[
                    ("helpful", "Helpful"),
                    ("not_helpful", "Not Helpful"),
                    ("step_helped", "Step Helped"),
                    ("incorrect", "Incorrect Information"),
                    ("citation_missing", "Missing Citation"),
                    ("citation_wrong", "Wrong Citation"),
                ],
                max_length=20,
            ),
        ),
        migrations.AddIndex(
            model_name="messagefeedback",
            index=models.Index(
                fields=["feedback_type", "is_positive"],
                name="chat_messag_feedbac_580b1d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="messagefeedback",
            index=models.Index(
                fields=["created_at"], name="chat_messag_created_32e0b1_idx"
            ),
        ),
        migrations.AddField(
            model_name="answerlog",
            name="experiment",
            field=models.ForeignKey(
                blank=True,
                help_text="A/B test experiment if applicable",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="answer_logs",
                to="core.experiment",
            ),
        ),
        migrations.AddField(
            model_name="answerlog",
            name="message",
            field=models.OneToOneField(
                help_text="Associated assistant message",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="answer_log",
                to="chat.message",
            ),
        ),
        migrations.AddIndex(
            model_name="answerlog",
            index=models.Index(
                fields=["method", "created_at"], name="chat_answer_method_174223_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="answerlog",
            index=models.Index(
                fields=["llm_model", "created_at"],
                name="chat_answer_llm_mod_91bee8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="answerlog",
            index=models.Index(
                fields=["had_error"], name="chat_answer_had_err_a40244_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="answerlog",
            index=models.Index(
                fields=["experiment", "created_at"],
                name="chat_answer_experim_fd8a05_idx",
            ),
        ),
    ]
