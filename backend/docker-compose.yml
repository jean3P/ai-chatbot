services:
  postgres-dev:
    image: pgvector/pgvector:pg15
    container_name: chatbot-postgres-dev
    environment:
      POSTGRES_DB: chatbot_dev
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: dev_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=en_US.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user -d chatbot_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres-test:
    image: pgvector/pgvector:pg15
    container_name: chatbot-postgres-test
    environment:
      POSTGRES_DB: test_chatbot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=en_US.UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    tmpfs:
      - /var/lib/postgresql/data
    command: >
      postgres
      -c fsync=off
      -c synchronous_commit=off
      -c full_page_writes=off
      -c max_connections=100
      -c shared_buffers=128MB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d test_chatbot"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: chatbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data_dev:
    name: chatbot_postgres_dev
  redis_data:
    name: chatbot_redis

networks:
  default:
    name: chatbot-network
